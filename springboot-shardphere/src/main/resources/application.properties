# ?????????
   spring.output.ansi.enabled: ALWAYS

## ????????????????????m1?m2
  spring.shardingsphere.datasource.names=m1,m2

  # ???m1???????????url??????????????????
  spring.shardingsphere.datasource.m1.url=jdbc:mysql://39.107.242.71:3346/myshareDB1?characterEncoding=utf8&useSSL=false
  spring.shardingsphere.datasource.m1.username=root
  spring.shardingsphere.datasource.m1.password=123456
  spring.shardingsphere.datasource.m1.driver-class-name=com.mysql.jdbc.Driver
  spring.shardingsphere.datasource.m1.type=com.zaxxer.hikari.HikariDataSource


#spring.datasource.druid.url=jdbc:mysql://39.107.242.71:3346/myshareDB1?characterEncoding=utf8&useSSL=false
#spring.datasource.druid.username=root
#spring.datasource.druid.password=123456
#spring.datasource.druiddriver-class-name=com.mysql.jdbc.Driver
#spring.datasource.type=mysql
  # ?????????????m2????????m1??m2?????????
  spring.shardingsphere.datasource.m2.url=jdbc:mysql://139.196.72.239:3306/myshareDB1?characterEncoding=utf8&useSSL=false
  spring.shardingsphere.datasource.m2.username=root
  spring.shardingsphere.datasource.m2.password=123456
  spring.shardingsphere.datasource.m2.driver-class-name=com.mysql.jdbc.Driver
  spring.shardingsphere.datasource.m2.type=com.zaxxer.hikari.HikariDataSource
#
#  # ????????????????????????????????
  spring.shardingsphere.mode.type=Memory
##
##  # ??????user???????????????$->{1..2}?????????$->{1..2}?????????
  spring.shardingsphere.rules.sharding.tables.user.actualDataNodes=m$->{1..2}.user_$->{1..2}
##  # ????????????????????user??sex???????
  spring.shardingsphere.rules.sharding.tables.user.databaseStrategy.standard.shardingColumn=sex
#  # ?????????????????????????database-inline????????
  spring.shardingsphere.rules.sharding.tables.user.databaseStrategy.standard.shardingAlgorithmName=database-inline
##  # ??????????????????user??id???????
  spring.shardingsphere.rules.sharding.tables.user.tableStrategy.standard.shardingColumn=id
##  # ???????????????????????table-inline????????
  spring.shardingsphere.rules.sharding.tables.user.tableStrategy.standard.shardingAlgorithmName=table-inline
##
##  # ?????database-inline??????????
  spring.shardingsphere.rules.sharding.shardingAlgorithms.database-inline.type=INLINE
##  # ???database-inline?????????????????sex????????????????m1????????????m2?????
  spring.shardingsphere.rules.sharding.shardingAlgorithms.database-inline.props.algorithm-expression=m$->{sex % 2 + 1}
##  # ?????table-inline???????????
  spring.shardingsphere.rules.sharding.shardingAlgorithms.table-inline.type=INLINE
### ???table-inline?????????????????id?????????????????3?
spring.shardingsphere.rules.sharding.shardingAlgorithms.table-inline.props.algorithm-expression=user_$->{(id % 3 == 0) ? id % 3 + 1 : id % 3}
##
### ???user???????????????id??????
  spring.shardingsphere.rules.sharding.tables.user.key-generate-strategy.column=id
##  # ??????????????????snowflake???
  spring.shardingsphere.sharding.default-key-generate-strategy.xxx=snowflake
  # ?????snowflake????????????????Snowflake???
  spring.shardingsphere.rules.sharding.key-generators.snowflake.type=SNOWFLAKE

  # ??sql????
  spring.shardingsphere.props.sql-show=true

# ?? xxxMapper.xml?????
mybatis.mapper-locations: classpath:mapper/**/*.xml
